   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"pbs.c"
  21              	.Ltext0:
  22              		.file 1 "../src/pbs.c"
 1935              		.align	2
 1936              		.global	pbs_init
 1938              	pbs_init:
 1939              	.LFB0:
   1:../src/pbs.c  **** #include <s3c44b0x.h>
   2:../src/pbs.c  **** #include <s3cev40.h>
   3:../src/pbs.c  **** #include <pbs.h>
   4:../src/pbs.c  **** #include <timers.h>
   5:../src/pbs.c  **** 
   6:../src/pbs.c  **** extern void isr_PB_dummy( void );
   7:../src/pbs.c  **** 
   8:../src/pbs.c  **** void pbs_init( void )
   9:../src/pbs.c  **** {
 1940              		.loc 1 9 0
 1941              		.cfi_startproc
 1942              		@ Function supports interworking.
 1943              		@ args = 0, pretend = 0, frame = 0
 1944              		@ frame_needed = 1, uses_anonymous_args = 0
 1945 0000 0DC0A0E1 		mov	ip, sp
 1946              	.LCFI0:
 1947              		.cfi_def_cfa_register 12
 1948 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1949 0008 04B04CE2 		sub	fp, ip, #4
 1950              		.cfi_offset 14, -8
 1951              		.cfi_offset 13, -12
 1952              		.cfi_offset 11, -16
 1953              	.LCFI1:
 1954              		.cfi_def_cfa 11, 4
  10:../src/pbs.c  ****     timers_init();
 1955              		.loc 1 10 0
 1956 000c FEFFFFEB 		bl	timers_init
  11:../src/pbs.c  **** }
 1957              		.loc 1 11 0
 1958 0010 0CD04BE2 		sub	sp, fp, #12
 1959 0014 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1960 0018 1EFF2FE1 		bx	lr
 1961              		.cfi_endproc
 1962              	.LFE0:
 1964              		.align	2
 1965              		.global	pb_scan
 1967              	pb_scan:
 1968              	.LFB1:
  12:../src/pbs.c  **** 
  13:../src/pbs.c  **** uint8 pb_scan( void )
  14:../src/pbs.c  **** {
 1969              		.loc 1 14 0
 1970              		.cfi_startproc
 1971              		@ Function supports interworking.
 1972              		@ args = 0, pretend = 0, frame = 0
 1973              		@ frame_needed = 1, uses_anonymous_args = 0
 1974 001c 0DC0A0E1 		mov	ip, sp
 1975              	.LCFI2:
 1976              		.cfi_def_cfa_register 12
 1977 0020 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1978 0024 04B04CE2 		sub	fp, ip, #4
 1979              		.cfi_offset 14, -8
 1980              		.cfi_offset 13, -12
 1981              		.cfi_offset 11, -16
 1982              	.LCFI3:
 1983              		.cfi_def_cfa 11, 4
  15:../src/pbs.c  ****     if( !(PDATG & PB_LEFT) )
 1984              		.loc 1 15 0
 1985 0028 44309FE5 		ldr	r3, .L6
 1986 002c 003093E5 		ldr	r3, [r3, #0]
 1987 0030 403003E2 		and	r3, r3, #64
 1988 0034 000053E3 		cmp	r3, #0
 1989 0038 0100001A 		bne	.L3
  16:../src/pbs.c  ****         return PB_LEFT;
 1990              		.loc 1 16 0
 1991 003c 4030A0E3 		mov	r3, #64
 1992 0040 070000EA 		b	.L4
 1993              	.L3:
  17:../src/pbs.c  ****     else if( !(PDATG & PB_RIGHT) )
 1994              		.loc 1 17 0
 1995 0044 28309FE5 		ldr	r3, .L6
 1996 0048 003093E5 		ldr	r3, [r3, #0]
 1997 004c 803003E2 		and	r3, r3, #128
 1998 0050 000053E3 		cmp	r3, #0
 1999 0054 0100001A 		bne	.L5
  18:../src/pbs.c  ****         return PB_RIGHT;
 2000              		.loc 1 18 0
 2001 0058 8030A0E3 		mov	r3, #128
 2002 005c 000000EA 		b	.L4
 2003              	.L5:
  19:../src/pbs.c  ****     else
  20:../src/pbs.c  ****         return PB_FAILURE;
 2004              		.loc 1 20 0
 2005 0060 FF30A0E3 		mov	r3, #255
 2006              	.L4:
  21:../src/pbs.c  **** }
 2007              		.loc 1 21 0
 2008 0064 0300A0E1 		mov	r0, r3
 2009 0068 0CD04BE2 		sub	sp, fp, #12
 2010 006c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2011 0070 1EFF2FE1 		bx	lr
 2012              	.L7:
 2013              		.align	2
 2014              	.L6:
 2015 0074 4400D201 		.word	30539844
 2016              		.cfi_endproc
 2017              	.LFE1:
 2019              		.align	2
 2020              		.global	pb_pressed
 2022              	pb_pressed:
 2023              	.LFB2:
  22:../src/pbs.c  **** 
  23:../src/pbs.c  **** uint8 pb_pressed( void ) {
 2024              		.loc 1 23 0
 2025              		.cfi_startproc
 2026              		@ Function supports interworking.
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 1, uses_anonymous_args = 0
 2029 0078 0DC0A0E1 		mov	ip, sp
 2030              	.LCFI4:
 2031              		.cfi_def_cfa_register 12
 2032 007c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2033 0080 04B04CE2 		sub	fp, ip, #4
 2034              		.cfi_offset 14, -8
 2035              		.cfi_offset 13, -12
 2036              		.cfi_offset 11, -16
 2037              	.LCFI5:
 2038              		.cfi_def_cfa 11, 4
  24:../src/pbs.c  ****     return (!(PDATG & (1 << 6)) || !(PDATG & (1 << 7)));
 2039              		.loc 1 24 0
 2040 0084 40309FE5 		ldr	r3, .L12
 2041 0088 003093E5 		ldr	r3, [r3, #0]
 2042 008c 403003E2 		and	r3, r3, #64
 2043 0090 000053E3 		cmp	r3, #0
 2044 0094 0400000A 		beq	.L9
 2045              		.loc 1 24 0 is_stmt 0 discriminator 2
 2046 0098 2C309FE5 		ldr	r3, .L12
 2047 009c 003093E5 		ldr	r3, [r3, #0]
 2048 00a0 803003E2 		and	r3, r3, #128
 2049 00a4 000053E3 		cmp	r3, #0
 2050 00a8 0100001A 		bne	.L10
 2051              	.L9:
 2052              		.loc 1 24 0 discriminator 1
 2053 00ac 0130A0E3 		mov	r3, #1
 2054 00b0 000000EA 		b	.L11
 2055              	.L10:
 2056 00b4 0030A0E3 		mov	r3, #0
 2057              	.L11:
 2058              		.loc 1 24 0 discriminator 3
 2059 00b8 FF3003E2 		and	r3, r3, #255
  25:../src/pbs.c  **** }
 2060              		.loc 1 25 0 is_stmt 1 discriminator 3
 2061 00bc 0300A0E1 		mov	r0, r3
 2062 00c0 0CD04BE2 		sub	sp, fp, #12
 2063 00c4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2064 00c8 1EFF2FE1 		bx	lr
 2065              	.L13:
 2066              		.align	2
 2067              	.L12:
 2068 00cc 4400D201 		.word	30539844
 2069              		.cfi_endproc
 2070              	.LFE2:
 2072              		.align	2
 2073              		.global	pb_getchar
 2075              	pb_getchar:
 2076              	.LFB3:
  26:../src/pbs.c  **** 
  27:../src/pbs.c  **** uint8 pb_getchar( void ) {
 2077              		.loc 1 27 0
 2078              		.cfi_startproc
 2079              		@ Function supports interworking.
 2080              		@ args = 0, pretend = 0, frame = 8
 2081              		@ frame_needed = 1, uses_anonymous_args = 0
 2082 00d0 0DC0A0E1 		mov	ip, sp
 2083              	.LCFI6:
 2084              		.cfi_def_cfa_register 12
 2085 00d4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2086 00d8 04B04CE2 		sub	fp, ip, #4
 2087              		.cfi_offset 14, -8
 2088              		.cfi_offset 13, -12
 2089              		.cfi_offset 11, -16
 2090              	.LCFI7:
 2091              		.cfi_def_cfa 11, 4
 2092 00dc 08D04DE2 		sub	sp, sp, #8
  28:../src/pbs.c  ****     uint8 scancode;
  29:../src/pbs.c  **** 
  30:../src/pbs.c  ****     while( !pb_pressed() );
 2093              		.loc 1 30 0
 2094 00e0 0000A0E1 		mov	r0, r0	@ nop
 2095              	.L15:
 2096              		.loc 1 30 0 is_stmt 0 discriminator 1
 2097 00e4 FEFFFFEB 		bl	pb_pressed
 2098 00e8 0030A0E1 		mov	r3, r0
 2099 00ec 000053E3 		cmp	r3, #0
 2100 00f0 FBFFFF0A 		beq	.L15
  31:../src/pbs.c  ****     sw_delay_ms( PB_KEYDOWN_DELAY );
 2101              		.loc 1 31 0 is_stmt 1
 2102 00f4 1E00A0E3 		mov	r0, #30
 2103 00f8 FEFFFFEB 		bl	sw_delay_ms
  32:../src/pbs.c  **** 
  33:../src/pbs.c  ****     scancode = pb_scan();
 2104              		.loc 1 33 0
 2105 00fc FEFFFFEB 		bl	pb_scan
 2106 0100 0030A0E1 		mov	r3, r0
 2107 0104 0D304BE5 		strb	r3, [fp, #-13]
  34:../src/pbs.c  **** 
  35:../src/pbs.c  ****     while( pb_pressed() );
 2108              		.loc 1 35 0
 2109 0108 0000A0E1 		mov	r0, r0	@ nop
 2110              	.L16:
 2111              		.loc 1 35 0 is_stmt 0 discriminator 1
 2112 010c FEFFFFEB 		bl	pb_pressed
 2113 0110 0030A0E1 		mov	r3, r0
 2114 0114 000053E3 		cmp	r3, #0
 2115 0118 FBFFFF1A 		bne	.L16
  36:../src/pbs.c  ****     sw_delay_ms( PB_KEYUP_DELAY );
 2116              		.loc 1 36 0 is_stmt 1
 2117 011c 6400A0E3 		mov	r0, #100
 2118 0120 FEFFFFEB 		bl	sw_delay_ms
  37:../src/pbs.c  **** 
  38:../src/pbs.c  ****     return scancode;
 2119              		.loc 1 38 0
 2120 0124 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
  39:../src/pbs.c  **** }
 2121              		.loc 1 39 0
 2122 0128 0300A0E1 		mov	r0, r3
 2123 012c 0CD04BE2 		sub	sp, fp, #12
 2124 0130 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2125 0134 1EFF2FE1 		bx	lr
 2126              		.cfi_endproc
 2127              	.LFE3:
 2129              		.align	2
 2130              		.global	pb_getchartime
 2132              	pb_getchartime:
 2133              	.LFB4:
  40:../src/pbs.c  **** 
  41:../src/pbs.c  **** uint8 pb_getchartime( uint16 *ms )
  42:../src/pbs.c  **** {
 2134              		.loc 1 42 0
 2135              		.cfi_startproc
 2136              		@ Function supports interworking.
 2137              		@ args = 0, pretend = 0, frame = 16
 2138              		@ frame_needed = 1, uses_anonymous_args = 0
 2139 0138 0DC0A0E1 		mov	ip, sp
 2140              	.LCFI8:
 2141              		.cfi_def_cfa_register 12
 2142 013c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2143 0140 04B04CE2 		sub	fp, ip, #4
 2144              		.cfi_offset 14, -8
 2145              		.cfi_offset 13, -12
 2146              		.cfi_offset 11, -16
 2147              	.LCFI9:
 2148              		.cfi_def_cfa 11, 4
 2149 0144 10D04DE2 		sub	sp, sp, #16
 2150 0148 18000BE5 		str	r0, [fp, #-24]
  43:../src/pbs.c  ****     uint8 scancode;
  44:../src/pbs.c  ****     
  45:../src/pbs.c  ****     while( !pb_pressed() );
 2151              		.loc 1 45 0
 2152 014c 0000A0E1 		mov	r0, r0	@ nop
 2153              	.L18:
 2154              		.loc 1 45 0 is_stmt 0 discriminator 1
 2155 0150 FEFFFFEB 		bl	pb_pressed
 2156 0154 0030A0E1 		mov	r3, r0
 2157 0158 000053E3 		cmp	r3, #0
 2158 015c FBFFFF0A 		beq	.L18
  46:../src/pbs.c  ****     timer3_start();
 2159              		.loc 1 46 0 is_stmt 1
 2160 0160 FEFFFFEB 		bl	timer3_start
  47:../src/pbs.c  ****     sw_delay_ms( PB_KEYDOWN_DELAY );
 2161              		.loc 1 47 0
 2162 0164 1E00A0E3 		mov	r0, #30
 2163 0168 FEFFFFEB 		bl	sw_delay_ms
  48:../src/pbs.c  ****     
  49:../src/pbs.c  ****     scancode = pb_scan();
 2164              		.loc 1 49 0
 2165 016c FEFFFFEB 		bl	pb_scan
 2166 0170 0030A0E1 		mov	r3, r0
 2167 0174 0D304BE5 		strb	r3, [fp, #-13]
  50:../src/pbs.c  ****     
  51:../src/pbs.c  ****     while( pb_pressed() );
 2168              		.loc 1 51 0
 2169 0178 0000A0E1 		mov	r0, r0	@ nop
 2170              	.L19:
 2171              		.loc 1 51 0 is_stmt 0 discriminator 1
 2172 017c FEFFFFEB 		bl	pb_pressed
 2173 0180 0030A0E1 		mov	r3, r0
 2174 0184 000053E3 		cmp	r3, #0
 2175 0188 FBFFFF1A 		bne	.L19
  52:../src/pbs.c  ****     *ms = timer3_stop() / 10;
 2176              		.loc 1 52 0 is_stmt 1
 2177 018c FEFFFFEB 		bl	timer3_stop
 2178 0190 0030A0E1 		mov	r3, r0
 2179 0194 0320A0E1 		mov	r2, r3
 2180 0198 30309FE5 		ldr	r3, .L20
 2181 019c 921383E0 		umull	r1, r3, r2, r3
 2182 01a0 A331A0E1 		mov	r3, r3, lsr #3
 2183 01a4 0338A0E1 		mov	r3, r3, asl #16
 2184 01a8 2328A0E1 		mov	r2, r3, lsr #16
 2185 01ac 18301BE5 		ldr	r3, [fp, #-24]
 2186 01b0 B020C3E1 		strh	r2, [r3, #0]	@ movhi
  53:../src/pbs.c  ****     sw_delay_ms( PB_KEYUP_DELAY );
 2187              		.loc 1 53 0
 2188 01b4 6400A0E3 		mov	r0, #100
 2189 01b8 FEFFFFEB 		bl	sw_delay_ms
  54:../src/pbs.c  **** 
  55:../src/pbs.c  ****     return scancode;
 2190              		.loc 1 55 0
 2191 01bc 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
  56:../src/pbs.c  **** }
 2192              		.loc 1 56 0
 2193 01c0 0300A0E1 		mov	r0, r3
 2194 01c4 0CD04BE2 		sub	sp, fp, #12
 2195 01c8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2196 01cc 1EFF2FE1 		bx	lr
 2197              	.L21:
 2198              		.align	2
 2199              	.L20:
 2200 01d0 CDCCCCCC 		.word	-858993459
 2201              		.cfi_endproc
 2202              	.LFE4:
 2204              		.align	2
 2205              		.global	pb_timeout_getchar
 2207              	pb_timeout_getchar:
 2208              	.LFB5:
  57:../src/pbs.c  **** 
  58:../src/pbs.c  **** uint8 pb_timeout_getchar( uint16 ms )
  59:../src/pbs.c  **** {
 2209              		.loc 1 59 0
 2210              		.cfi_startproc
 2211              		@ Function supports interworking.
 2212              		@ args = 0, pretend = 0, frame = 16
 2213              		@ frame_needed = 1, uses_anonymous_args = 0
 2214 01d4 0DC0A0E1 		mov	ip, sp
 2215              	.LCFI10:
 2216              		.cfi_def_cfa_register 12
 2217 01d8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2218 01dc 04B04CE2 		sub	fp, ip, #4
 2219              		.cfi_offset 14, -8
 2220              		.cfi_offset 13, -12
 2221              		.cfi_offset 11, -16
 2222              	.LCFI11:
 2223              		.cfi_def_cfa 11, 4
 2224 01e0 10D04DE2 		sub	sp, sp, #16
 2225 01e4 0030A0E1 		mov	r3, r0
 2226 01e8 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
  60:../src/pbs.c  ****     uint8 scancode;
  61:../src/pbs.c  **** 
  62:../src/pbs.c  ****     timer3_start_timeout(ms * 10);
 2227              		.loc 1 62 0
 2228 01ec B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2229 01f0 0320A0E1 		mov	r2, r3	@ movhi
 2230 01f4 0221A0E1 		mov	r2, r2, asl #2
 2231 01f8 033082E0 		add	r3, r2, r3
 2232 01fc 8330A0E1 		mov	r3, r3, asl #1
 2233 0200 0338A0E1 		mov	r3, r3, asl #16
 2234 0204 2338A0E1 		mov	r3, r3, lsr #16
 2235 0208 0300A0E1 		mov	r0, r3
 2236 020c FEFFFFEB 		bl	timer3_start_timeout
  63:../src/pbs.c  ****     while( !pb_pressed() ) {
 2237              		.loc 1 63 0
 2238 0210 050000EA 		b	.L23
 2239              	.L25:
  64:../src/pbs.c  ****     	if(timer3_timeout())
 2240              		.loc 1 64 0
 2241 0214 FEFFFFEB 		bl	timer3_timeout
 2242 0218 0030A0E1 		mov	r3, r0
 2243 021c 000053E3 		cmp	r3, #0
 2244 0220 0100000A 		beq	.L23
  65:../src/pbs.c  ****     		return PB_TIMEOUT;
 2245              		.loc 1 65 0
 2246 0224 FE30A0E3 		mov	r3, #254
 2247 0228 100000EA 		b	.L24
 2248              	.L23:
  63:../src/pbs.c  ****     while( !pb_pressed() ) {
 2249              		.loc 1 63 0 discriminator 1
 2250 022c FEFFFFEB 		bl	pb_pressed
 2251 0230 0030A0E1 		mov	r3, r0
 2252 0234 000053E3 		cmp	r3, #0
 2253 0238 F5FFFF0A 		beq	.L25
  66:../src/pbs.c  ****     }
  67:../src/pbs.c  ****     sw_delay_ms( PB_KEYDOWN_DELAY );
 2254              		.loc 1 67 0
 2255 023c 1E00A0E3 		mov	r0, #30
 2256 0240 FEFFFFEB 		bl	sw_delay_ms
  68:../src/pbs.c  ****     scancode = pb_scan();
 2257              		.loc 1 68 0
 2258 0244 FEFFFFEB 		bl	pb_scan
 2259 0248 0030A0E1 		mov	r3, r0
 2260 024c 0D304BE5 		strb	r3, [fp, #-13]
  69:../src/pbs.c  **** 
  70:../src/pbs.c  ****     while( pb_pressed() );
 2261              		.loc 1 70 0
 2262 0250 0000A0E1 		mov	r0, r0	@ nop
 2263              	.L26:
 2264              		.loc 1 70 0 is_stmt 0 discriminator 1
 2265 0254 FEFFFFEB 		bl	pb_pressed
 2266 0258 0030A0E1 		mov	r3, r0
 2267 025c 000053E3 		cmp	r3, #0
 2268 0260 FBFFFF1A 		bne	.L26
  71:../src/pbs.c  ****     sw_delay_ms( PB_KEYUP_DELAY );
 2269              		.loc 1 71 0 is_stmt 1
 2270 0264 6400A0E3 		mov	r0, #100
 2271 0268 FEFFFFEB 		bl	sw_delay_ms
  72:../src/pbs.c  **** 
  73:../src/pbs.c  ****     return scancode;
 2272              		.loc 1 73 0
 2273 026c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2274              	.L24:
  74:../src/pbs.c  **** }
 2275              		.loc 1 74 0
 2276 0270 0300A0E1 		mov	r0, r3
 2277 0274 0CD04BE2 		sub	sp, fp, #12
 2278 0278 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2279 027c 1EFF2FE1 		bx	lr
 2280              		.cfi_endproc
 2281              	.LFE5:
 2283              		.align	2
 2284              		.global	pbs_open
 2286              	pbs_open:
 2287              	.LFB6:
  75:../src/pbs.c  **** 
  76:../src/pbs.c  **** void pbs_open( void (*isr)(void) )
  77:../src/pbs.c  **** {
 2288              		.loc 1 77 0
 2289              		.cfi_startproc
 2290              		@ Function supports interworking.
 2291              		@ args = 0, pretend = 0, frame = 8
 2292              		@ frame_needed = 1, uses_anonymous_args = 0
 2293 0280 0DC0A0E1 		mov	ip, sp
 2294              	.LCFI12:
 2295              		.cfi_def_cfa_register 12
 2296 0284 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2297 0288 04B04CE2 		sub	fp, ip, #4
 2298              		.cfi_offset 14, -8
 2299              		.cfi_offset 13, -12
 2300              		.cfi_offset 11, -16
 2301              	.LCFI13:
 2302              		.cfi_def_cfa 11, 4
 2303 028c 08D04DE2 		sub	sp, sp, #8
 2304 0290 10000BE5 		str	r0, [fp, #-16]
  78:../src/pbs.c  ****     pISR_PB   = isr;
 2305              		.loc 1 78 0
 2306 0294 3C309FE5 		ldr	r3, .L28
 2307 0298 10201BE5 		ldr	r2, [fp, #-16]
 2308 029c 002083E5 		str	r2, [r3, #0]
  79:../src/pbs.c  ****     EXTINTPND = 0xF;
 2309              		.loc 1 79 0
 2310 02a0 34309FE5 		ldr	r3, .L28+4
 2311 02a4 0F20A0E3 		mov	r2, #15
 2312 02a8 002083E5 		str	r2, [r3, #0]
  80:../src/pbs.c  ****     I_ISPC    = BIT_PB;
 2313              		.loc 1 80 0
 2314 02ac 2C309FE5 		ldr	r3, .L28+8
 2315 02b0 0226A0E3 		mov	r2, #2097152
 2316 02b4 002083E5 		str	r2, [r3, #0]
  81:../src/pbs.c  ****     INTMSK   &= ~(BIT_GLOBAL | BIT_PB);
 2317              		.loc 1 81 0
 2318 02b8 24309FE5 		ldr	r3, .L28+12
 2319 02bc 20209FE5 		ldr	r2, .L28+12
 2320 02c0 002092E5 		ldr	r2, [r2, #0]
 2321 02c4 4226C2E3 		bic	r2, r2, #69206016
 2322 02c8 002083E5 		str	r2, [r3, #0]
  82:../src/pbs.c  **** }
 2323              		.loc 1 82 0
 2324 02cc 0CD04BE2 		sub	sp, fp, #12
 2325 02d0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2326 02d4 1EFF2FE1 		bx	lr
 2327              	.L29:
 2328              		.align	2
 2329              	.L28:
 2330 02d8 74FF7F0C 		.word	209715060
 2331 02dc 5400D201 		.word	30539860
 2332 02e0 2400E001 		.word	31457316
 2333 02e4 0C00E001 		.word	31457292
 2334              		.cfi_endproc
 2335              	.LFE6:
 2337              		.align	2
 2338              		.global	pbs_close
 2340              	pbs_close:
 2341              	.LFB7:
  83:../src/pbs.c  **** 
  84:../src/pbs.c  **** void pbs_close( void )
  85:../src/pbs.c  **** {
 2342              		.loc 1 85 0
 2343              		.cfi_startproc
 2344              		@ Function supports interworking.
 2345              		@ args = 0, pretend = 0, frame = 0
 2346              		@ frame_needed = 1, uses_anonymous_args = 0
 2347 02e8 0DC0A0E1 		mov	ip, sp
 2348              	.LCFI14:
 2349              		.cfi_def_cfa_register 12
 2350 02ec 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2351 02f0 04B04CE2 		sub	fp, ip, #4
 2352              		.cfi_offset 14, -8
 2353              		.cfi_offset 13, -12
 2354              		.cfi_offset 11, -16
 2355              	.LCFI15:
 2356              		.cfi_def_cfa 11, 4
  86:../src/pbs.c  ****     INTMSK  |= BIT_GLOBAL | BIT_PB;
 2357              		.loc 1 86 0
 2358 02f4 24309FE5 		ldr	r3, .L31
 2359 02f8 20209FE5 		ldr	r2, .L31
 2360 02fc 002092E5 		ldr	r2, [r2, #0]
 2361 0300 422682E3 		orr	r2, r2, #69206016
 2362 0304 002083E5 		str	r2, [r3, #0]
  87:../src/pbs.c  ****     pISR_PB  = isr_PB_dummy;
 2363              		.loc 1 87 0
 2364 0308 14309FE5 		ldr	r3, .L31+4
 2365 030c 14209FE5 		ldr	r2, .L31+8
 2366 0310 002083E5 		str	r2, [r3, #0]
  88:../src/pbs.c  **** }
 2367              		.loc 1 88 0
 2368 0314 0CD04BE2 		sub	sp, fp, #12
 2369 0318 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2370 031c 1EFF2FE1 		bx	lr
 2371              	.L32:
 2372              		.align	2
 2373              	.L31:
 2374 0320 0C00E001 		.word	31457292
 2375 0324 74FF7F0C 		.word	209715060
 2376 0328 00000000 		.word	isr_PB_dummy
 2377              		.cfi_endproc
 2378              	.LFE7:
 2380              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 pbs.c
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:1935   .text:00000000 $a
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:1938   .text:00000000 pbs_init
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:1967   .text:0000001c pb_scan
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2015   .text:00000074 $d
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2019   .text:00000078 $a
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2022   .text:00000078 pb_pressed
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2068   .text:000000cc $d
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2072   .text:000000d0 $a
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2075   .text:000000d0 pb_getchar
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2132   .text:00000138 pb_getchartime
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2200   .text:000001d0 $d
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2204   .text:000001d4 $a
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2207   .text:000001d4 pb_timeout_getchar
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2286   .text:00000280 pbs_open
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2330   .text:000002d8 $d
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2337   .text:000002e8 $a
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2340   .text:000002e8 pbs_close
C:\Users\USUARI~2\AppData\Local\Temp\cc8kvQs1.s:2374   .text:00000320 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timers_init
sw_delay_ms
timer3_start
timer3_stop
timer3_start_timeout
timer3_timeout
isr_PB_dummy
