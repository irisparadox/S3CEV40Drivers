   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"uart.c"
  21              	.Ltext0:
  22              		.file 1 "../src/uart.c"
 1682              		.align	2
 1683              		.global	uart0_init
 1685              	uart0_init:
 1686              	.LFB0:
   1:../src/uart.c **** #include <s3c44b0x.h>
   2:../src/uart.c **** #include <uart.h>
   3:../src/uart.c **** 
   4:../src/uart.c **** void uart0_init(void)
   5:../src/uart.c **** {
 1687              		.loc 1 5 0
 1688              		.cfi_startproc
 1689              		@ Function supports interworking.
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692 0000 0DC0A0E1 		mov	ip, sp
 1693              	.LCFI0:
 1694              		.cfi_def_cfa_register 12
 1695 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1696 0008 04B04CE2 		sub	fp, ip, #4
 1697              		.cfi_offset 14, -8
 1698              		.cfi_offset 13, -12
 1699              		.cfi_offset 11, -16
 1700              	.LCFI1:
 1701              		.cfi_def_cfa 11, 4
   6:../src/uart.c ****     UFCON0 = 0x1;
 1702              		.loc 1 6 0
 1703 000c 40309FE5 		ldr	r3, .L2
 1704 0010 0120A0E3 		mov	r2, #1
 1705 0014 002083E5 		str	r2, [r3, #0]
   7:../src/uart.c ****     UMCON0 = 0x0;
 1706              		.loc 1 7 0
 1707 0018 38309FE5 		ldr	r3, .L2+4
 1708 001c 0020A0E3 		mov	r2, #0
 1709 0020 002083E5 		str	r2, [r3, #0]
   8:../src/uart.c ****     ULCON0 = 0x3;
 1710              		.loc 1 8 0
 1711 0024 1D36A0E3 		mov	r3, #30408704
 1712 0028 0320A0E3 		mov	r2, #3
 1713 002c 002083E5 		str	r2, [r3, #0]
   9:../src/uart.c ****     UBRDIV0 = 0x22;
 1714              		.loc 1 9 0
 1715 0030 24309FE5 		ldr	r3, .L2+8
 1716 0034 2220A0E3 		mov	r2, #34
 1717 0038 002083E5 		str	r2, [r3, #0]
  10:../src/uart.c ****     UCON0 = 0x5;
 1718              		.loc 1 10 0
 1719 003c 1C309FE5 		ldr	r3, .L2+12
 1720 0040 0520A0E3 		mov	r2, #5
 1721 0044 002083E5 		str	r2, [r3, #0]
  11:../src/uart.c **** }
 1722              		.loc 1 11 0
 1723 0048 0CD04BE2 		sub	sp, fp, #12
 1724 004c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1725 0050 1EFF2FE1 		bx	lr
 1726              	.L3:
 1727              		.align	2
 1728              	.L2:
 1729 0054 0800D001 		.word	30408712
 1730 0058 0C00D001 		.word	30408716
 1731 005c 2800D001 		.word	30408744
 1732 0060 0400D001 		.word	30408708
 1733              		.cfi_endproc
 1734              	.LFE0:
 1736              		.align	2
 1737              		.global	uart0_putchar
 1739              	uart0_putchar:
 1740              	.LFB1:
  12:../src/uart.c **** 
  13:../src/uart.c **** void uart0_putchar(char ch)
  14:../src/uart.c **** {
 1741              		.loc 1 14 0
 1742              		.cfi_startproc
 1743              		@ Function supports interworking.
 1744              		@ args = 0, pretend = 0, frame = 8
 1745              		@ frame_needed = 1, uses_anonymous_args = 0
 1746 0064 0DC0A0E1 		mov	ip, sp
 1747              	.LCFI2:
 1748              		.cfi_def_cfa_register 12
 1749 0068 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1750 006c 04B04CE2 		sub	fp, ip, #4
 1751              		.cfi_offset 14, -8
 1752              		.cfi_offset 13, -12
 1753              		.cfi_offset 11, -16
 1754              	.LCFI3:
 1755              		.cfi_def_cfa 11, 4
 1756 0070 08D04DE2 		sub	sp, sp, #8
 1757 0074 0030A0E1 		mov	r3, r0
 1758 0078 0D304BE5 		strb	r3, [fp, #-13]
  15:../src/uart.c ****     while(UFSTAT0 & (1 << 9));
 1759              		.loc 1 15 0
 1760 007c 0000A0E1 		mov	r0, r0	@ nop
 1761              	.L5:
 1762              		.loc 1 15 0 is_stmt 0 discriminator 1
 1763 0080 24309FE5 		ldr	r3, .L6
 1764 0084 003093E5 		ldr	r3, [r3, #0]
 1765 0088 023C03E2 		and	r3, r3, #512
 1766 008c 000053E3 		cmp	r3, #0
 1767 0090 FAFFFF1A 		bne	.L5
  16:../src/uart.c ****     UTXH0 = ch;
 1768              		.loc 1 16 0 is_stmt 1
 1769 0094 14309FE5 		ldr	r3, .L6+4
 1770 0098 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1771 009c 002083E5 		str	r2, [r3, #0]
  17:../src/uart.c **** }        
 1772              		.loc 1 17 0
 1773 00a0 0CD04BE2 		sub	sp, fp, #12
 1774 00a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1775 00a8 1EFF2FE1 		bx	lr
 1776              	.L7:
 1777              		.align	2
 1778              	.L6:
 1779 00ac 1800D001 		.word	30408728
 1780 00b0 2000D001 		.word	30408736
 1781              		.cfi_endproc
 1782              	.LFE1:
 1784              		.align	2
 1785              		.global	uart0_getchar
 1787              	uart0_getchar:
 1788              	.LFB2:
  18:../src/uart.c **** 
  19:../src/uart.c **** char uart0_getchar(void)
  20:../src/uart.c **** {
 1789              		.loc 1 20 0
 1790              		.cfi_startproc
 1791              		@ Function supports interworking.
 1792              		@ args = 0, pretend = 0, frame = 0
 1793              		@ frame_needed = 1, uses_anonymous_args = 0
 1794 00b4 0DC0A0E1 		mov	ip, sp
 1795              	.LCFI4:
 1796              		.cfi_def_cfa_register 12
 1797 00b8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1798 00bc 04B04CE2 		sub	fp, ip, #4
 1799              		.cfi_offset 14, -8
 1800              		.cfi_offset 13, -12
 1801              		.cfi_offset 11, -16
 1802              	.LCFI5:
 1803              		.cfi_def_cfa 11, 4
  21:../src/uart.c ****     while(!(UFSTAT0 & 0xf));
 1804              		.loc 1 21 0
 1805 00c0 0000A0E1 		mov	r0, r0	@ nop
 1806              	.L9:
 1807              		.loc 1 21 0 is_stmt 0 discriminator 1
 1808 00c4 28309FE5 		ldr	r3, .L10
 1809 00c8 003093E5 		ldr	r3, [r3, #0]
 1810 00cc 0F3003E2 		and	r3, r3, #15
 1811 00d0 000053E3 		cmp	r3, #0
 1812 00d4 FAFFFF0A 		beq	.L9
  22:../src/uart.c ****     return URXH0;
 1813              		.loc 1 22 0 is_stmt 1
 1814 00d8 18309FE5 		ldr	r3, .L10+4
 1815 00dc 003093E5 		ldr	r3, [r3, #0]
 1816 00e0 FF3003E2 		and	r3, r3, #255
  23:../src/uart.c **** }
 1817              		.loc 1 23 0
 1818 00e4 0300A0E1 		mov	r0, r3
 1819 00e8 0CD04BE2 		sub	sp, fp, #12
 1820 00ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1821 00f0 1EFF2FE1 		bx	lr
 1822              	.L11:
 1823              		.align	2
 1824              	.L10:
 1825 00f4 1800D001 		.word	30408728
 1826 00f8 2400D001 		.word	30408740
 1827              		.cfi_endproc
 1828              	.LFE2:
 1830              		.align	2
 1831              		.global	uart0_puts
 1833              	uart0_puts:
 1834              	.LFB3:
  24:../src/uart.c **** 
  25:../src/uart.c **** void uart0_puts(char *s) {
 1835              		.loc 1 25 0
 1836              		.cfi_startproc
 1837              		@ Function supports interworking.
 1838              		@ args = 0, pretend = 0, frame = 8
 1839              		@ frame_needed = 1, uses_anonymous_args = 0
 1840 00fc 0DC0A0E1 		mov	ip, sp
 1841              	.LCFI6:
 1842              		.cfi_def_cfa_register 12
 1843 0100 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1844 0104 04B04CE2 		sub	fp, ip, #4
 1845              		.cfi_offset 14, -8
 1846              		.cfi_offset 13, -12
 1847              		.cfi_offset 11, -16
 1848              	.LCFI7:
 1849              		.cfi_def_cfa 11, 4
 1850 0108 08D04DE2 		sub	sp, sp, #8
 1851 010c 10000BE5 		str	r0, [fp, #-16]
  26:../src/uart.c ****     while(*s) {
 1852              		.loc 1 26 0
 1853 0110 060000EA 		b	.L13
 1854              	.L14:
  27:../src/uart.c ****     	uart0_putchar(*s);
 1855              		.loc 1 27 0
 1856 0114 10301BE5 		ldr	r3, [fp, #-16]
 1857 0118 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1858 011c 0300A0E1 		mov	r0, r3
 1859 0120 FEFFFFEB 		bl	uart0_putchar
  28:../src/uart.c ****     	++s;
 1860              		.loc 1 28 0
 1861 0124 10301BE5 		ldr	r3, [fp, #-16]
 1862 0128 013083E2 		add	r3, r3, #1
 1863 012c 10300BE5 		str	r3, [fp, #-16]
 1864              	.L13:
  26:../src/uart.c ****     while(*s) {
 1865              		.loc 1 26 0 discriminator 1
 1866 0130 10301BE5 		ldr	r3, [fp, #-16]
 1867 0134 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1868 0138 000053E3 		cmp	r3, #0
 1869 013c F4FFFF1A 		bne	.L14
  29:../src/uart.c ****     }
  30:../src/uart.c **** }
 1870              		.loc 1 30 0
 1871 0140 0CD04BE2 		sub	sp, fp, #12
 1872 0144 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1873 0148 1EFF2FE1 		bx	lr
 1874              		.cfi_endproc
 1875              	.LFE3:
 1877              		.align	2
 1878              		.global	uart0_putint
 1880              	uart0_putint:
 1881              	.LFB4:
  31:../src/uart.c **** 
  32:../src/uart.c **** void uart0_putint(int32 i) {
 1882              		.loc 1 32 0
 1883              		.cfi_startproc
 1884              		@ Function supports interworking.
 1885              		@ args = 0, pretend = 0, frame = 32
 1886              		@ frame_needed = 1, uses_anonymous_args = 0
 1887 014c 0DC0A0E1 		mov	ip, sp
 1888              	.LCFI8:
 1889              		.cfi_def_cfa_register 12
 1890 0150 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1891 0154 04B04CE2 		sub	fp, ip, #4
 1892              		.cfi_offset 14, -8
 1893              		.cfi_offset 13, -12
 1894              		.cfi_offset 11, -16
 1895              	.LCFI9:
 1896              		.cfi_def_cfa 11, 4
 1897 0158 20D04DE2 		sub	sp, sp, #32
 1898 015c 28000BE5 		str	r0, [fp, #-40]
  33:../src/uart.c ****     char buff[11 + 1];
  34:../src/uart.c ****     char* _Idx = buff + 11;
 1899              		.loc 1 34 0
 1900 0160 20304BE2 		sub	r3, fp, #32
 1901 0164 0B3083E2 		add	r3, r3, #11
 1902 0168 10300BE5 		str	r3, [fp, #-16]
  35:../src/uart.c ****     boolean _Neg = 0;
 1903              		.loc 1 35 0
 1904 016c 0030A0E3 		mov	r3, #0
 1905 0170 11304BE5 		strb	r3, [fp, #-17]
  36:../src/uart.c **** 
  37:../src/uart.c ****     *_Idx = '\0';
 1906              		.loc 1 37 0
 1907 0174 10301BE5 		ldr	r3, [fp, #-16]
 1908 0178 0020A0E3 		mov	r2, #0
 1909 017c 0020C3E5 		strb	r2, [r3, #0]
  38:../src/uart.c **** 
  39:../src/uart.c ****     if(i == 0) {
 1910              		.loc 1 39 0
 1911 0180 28301BE5 		ldr	r3, [fp, #-40]
 1912 0184 000053E3 		cmp	r3, #0
 1913 0188 0800001A 		bne	.L16
  40:../src/uart.c ****     	*--_Idx = '0';
 1914              		.loc 1 40 0
 1915 018c 10301BE5 		ldr	r3, [fp, #-16]
 1916 0190 013043E2 		sub	r3, r3, #1
 1917 0194 10300BE5 		str	r3, [fp, #-16]
 1918 0198 10301BE5 		ldr	r3, [fp, #-16]
 1919 019c 3020A0E3 		mov	r2, #48
 1920 01a0 0020C3E5 		strb	r2, [r3, #0]
  41:../src/uart.c ****     	uart0_puts(_Idx);
 1921              		.loc 1 41 0
 1922 01a4 10001BE5 		ldr	r0, [fp, #-16]
 1923 01a8 FEFFFFEB 		bl	uart0_puts
  42:../src/uart.c ****     	return;
 1924              		.loc 1 42 0
 1925 01ac 300000EA 		b	.L15
 1926              	.L16:
  43:../src/uart.c ****     }
  44:../src/uart.c **** 
  45:../src/uart.c ****     if(i < 0) {
 1927              		.loc 1 45 0
 1928 01b0 28301BE5 		ldr	r3, [fp, #-40]
 1929 01b4 000053E3 		cmp	r3, #0
 1930 01b8 1F0000AA 		bge	.L19
  46:../src/uart.c ****     	_Neg = 1;
 1931              		.loc 1 46 0
 1932 01bc 0130A0E3 		mov	r3, #1
 1933 01c0 11304BE5 		strb	r3, [fp, #-17]
  47:../src/uart.c ****     	i = -i;
 1934              		.loc 1 47 0
 1935 01c4 28301BE5 		ldr	r3, [fp, #-40]
 1936 01c8 003063E2 		rsb	r3, r3, #0
 1937 01cc 28300BE5 		str	r3, [fp, #-40]
  48:../src/uart.c ****     }
  49:../src/uart.c **** 
  50:../src/uart.c ****     while(i) {
 1938              		.loc 1 50 0
 1939 01d0 190000EA 		b	.L19
 1940              	.L20:
  51:../src/uart.c ****     	*--_Idx = (i % 10) + '0';
 1941              		.loc 1 51 0
 1942 01d4 10301BE5 		ldr	r3, [fp, #-16]
 1943 01d8 013043E2 		sub	r3, r3, #1
 1944 01dc 10300BE5 		str	r3, [fp, #-16]
 1945 01e0 28101BE5 		ldr	r1, [fp, #-40]
 1946 01e4 94309FE5 		ldr	r3, .L22
 1947 01e8 9123C3E0 		smull	r2, r3, r1, r3
 1948 01ec 4321A0E1 		mov	r2, r3, asr #2
 1949 01f0 C13FA0E1 		mov	r3, r1, asr #31
 1950 01f4 022063E0 		rsb	r2, r3, r2
 1951 01f8 0230A0E1 		mov	r3, r2
 1952 01fc 0331A0E1 		mov	r3, r3, asl #2
 1953 0200 023083E0 		add	r3, r3, r2
 1954 0204 8330A0E1 		mov	r3, r3, asl #1
 1955 0208 012063E0 		rsb	r2, r3, r1
 1956 020c FF3002E2 		and	r3, r2, #255
 1957 0210 303083E2 		add	r3, r3, #48
 1958 0214 FF2003E2 		and	r2, r3, #255
 1959 0218 10301BE5 		ldr	r3, [fp, #-16]
 1960 021c 0020C3E5 		strb	r2, [r3, #0]
  52:../src/uart.c ****     	i /= 10;
 1961              		.loc 1 52 0
 1962 0220 28301BE5 		ldr	r3, [fp, #-40]
 1963 0224 54209FE5 		ldr	r2, .L22
 1964 0228 9312C2E0 		smull	r1, r2, r3, r2
 1965 022c 4221A0E1 		mov	r2, r2, asr #2
 1966 0230 C33FA0E1 		mov	r3, r3, asr #31
 1967 0234 023063E0 		rsb	r3, r3, r2
 1968 0238 28300BE5 		str	r3, [fp, #-40]
 1969              	.L19:
  50:../src/uart.c ****     while(i) {
 1970              		.loc 1 50 0 discriminator 1
 1971 023c 28301BE5 		ldr	r3, [fp, #-40]
 1972 0240 000053E3 		cmp	r3, #0
 1973 0244 E2FFFF1A 		bne	.L20
  53:../src/uart.c ****     }
  54:../src/uart.c **** 
  55:../src/uart.c ****     if(_Neg) {
 1974              		.loc 1 55 0
 1975 0248 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1976 024c 000053E3 		cmp	r3, #0
 1977 0250 0500000A 		beq	.L21
  56:../src/uart.c ****     	*--_Idx = '-';
 1978              		.loc 1 56 0
 1979 0254 10301BE5 		ldr	r3, [fp, #-16]
 1980 0258 013043E2 		sub	r3, r3, #1
 1981 025c 10300BE5 		str	r3, [fp, #-16]
 1982 0260 10301BE5 		ldr	r3, [fp, #-16]
 1983 0264 2D20A0E3 		mov	r2, #45
 1984 0268 0020C3E5 		strb	r2, [r3, #0]
 1985              	.L21:
  57:../src/uart.c ****     }
  58:../src/uart.c **** 
  59:../src/uart.c ****     uart0_puts(_Idx);
 1986              		.loc 1 59 0
 1987 026c 10001BE5 		ldr	r0, [fp, #-16]
 1988 0270 FEFFFFEB 		bl	uart0_puts
 1989              	.L15:
  60:../src/uart.c **** 
  61:../src/uart.c **** }
 1990              		.loc 1 61 0
 1991 0274 0CD04BE2 		sub	sp, fp, #12
 1992 0278 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1993 027c 1EFF2FE1 		bx	lr
 1994              	.L23:
 1995              		.align	2
 1996              	.L22:
 1997 0280 67666666 		.word	1717986919
 1998              		.cfi_endproc
 1999              	.LFE4:
 2001              		.align	2
 2002              		.global	uart0_puthex
 2004              	uart0_puthex:
 2005              	.LFB5:
  62:../src/uart.c **** 
  63:../src/uart.c **** void uart0_puthex(uint32 i)
  64:../src/uart.c **** {
 2006              		.loc 1 64 0
 2007              		.cfi_startproc
 2008              		@ Function supports interworking.
 2009              		@ args = 0, pretend = 0, frame = 24
 2010              		@ frame_needed = 1, uses_anonymous_args = 0
 2011 0284 0DC0A0E1 		mov	ip, sp
 2012              	.LCFI10:
 2013              		.cfi_def_cfa_register 12
 2014 0288 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2015 028c 04B04CE2 		sub	fp, ip, #4
 2016              		.cfi_offset 14, -8
 2017              		.cfi_offset 13, -12
 2018              		.cfi_offset 11, -16
 2019              	.LCFI11:
 2020              		.cfi_def_cfa 11, 4
 2021 0290 18D04DE2 		sub	sp, sp, #24
 2022 0294 20000BE5 		str	r0, [fp, #-32]
  65:../src/uart.c ****     char buf[8 + 1];
  66:../src/uart.c ****     char *p = buf + 8;
 2023              		.loc 1 66 0
 2024 0298 1C304BE2 		sub	r3, fp, #28
 2025 029c 083083E2 		add	r3, r3, #8
 2026 02a0 10300BE5 		str	r3, [fp, #-16]
  67:../src/uart.c ****     uint8 c;
  68:../src/uart.c **** 
  69:../src/uart.c ****     *p = '\0';
 2027              		.loc 1 69 0
 2028 02a4 10301BE5 		ldr	r3, [fp, #-16]
 2029 02a8 0020A0E3 		mov	r2, #0
 2030 02ac 0020C3E5 		strb	r2, [r3, #0]
 2031              	.L27:
  70:../src/uart.c **** 
  71:../src/uart.c ****     do {
  72:../src/uart.c ****         c = i & 0xf;
 2032              		.loc 1 72 0
 2033 02b0 20301BE5 		ldr	r3, [fp, #-32]
 2034 02b4 FF3003E2 		and	r3, r3, #255
 2035 02b8 0F3003E2 		and	r3, r3, #15
 2036 02bc 11304BE5 		strb	r3, [fp, #-17]
  73:../src/uart.c ****         if( c < 10 )
 2037              		.loc 1 73 0
 2038 02c0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2039 02c4 090053E3 		cmp	r3, #9
 2040 02c8 0800008A 		bhi	.L25
  74:../src/uart.c ****             *--p = '0' + c;
 2041              		.loc 1 74 0
 2042 02cc 10301BE5 		ldr	r3, [fp, #-16]
 2043 02d0 013043E2 		sub	r3, r3, #1
 2044 02d4 10300BE5 		str	r3, [fp, #-16]
 2045 02d8 11305BE5 		ldrb	r3, [fp, #-17]
 2046 02dc 303083E2 		add	r3, r3, #48
 2047 02e0 FF2003E2 		and	r2, r3, #255
 2048 02e4 10301BE5 		ldr	r3, [fp, #-16]
 2049 02e8 0020C3E5 		strb	r2, [r3, #0]
 2050 02ec 070000EA 		b	.L26
 2051              	.L25:
  75:../src/uart.c ****         else
  76:../src/uart.c ****             *--p = 'a' + c - 10;
 2052              		.loc 1 76 0
 2053 02f0 10301BE5 		ldr	r3, [fp, #-16]
 2054 02f4 013043E2 		sub	r3, r3, #1
 2055 02f8 10300BE5 		str	r3, [fp, #-16]
 2056 02fc 11305BE5 		ldrb	r3, [fp, #-17]
 2057 0300 573083E2 		add	r3, r3, #87
 2058 0304 FF2003E2 		and	r2, r3, #255
 2059 0308 10301BE5 		ldr	r3, [fp, #-16]
 2060 030c 0020C3E5 		strb	r2, [r3, #0]
 2061              	.L26:
  77:../src/uart.c ****         i = i >> 4;
 2062              		.loc 1 77 0
 2063 0310 20301BE5 		ldr	r3, [fp, #-32]
 2064 0314 2332A0E1 		mov	r3, r3, lsr #4
 2065 0318 20300BE5 		str	r3, [fp, #-32]
  78:../src/uart.c ****     } while( i );
 2066              		.loc 1 78 0
 2067 031c 20301BE5 		ldr	r3, [fp, #-32]
 2068 0320 000053E3 		cmp	r3, #0
 2069 0324 E1FFFF1A 		bne	.L27
  79:../src/uart.c **** 
  80:../src/uart.c ****     uart0_puts( p );
 2070              		.loc 1 80 0
 2071 0328 10001BE5 		ldr	r0, [fp, #-16]
 2072 032c FEFFFFEB 		bl	uart0_puts
  81:../src/uart.c **** }
 2073              		.loc 1 81 0
 2074 0330 0CD04BE2 		sub	sp, fp, #12
 2075 0334 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2076 0338 1EFF2FE1 		bx	lr
 2077              		.cfi_endproc
 2078              	.LFE5:
 2080              		.align	2
 2081              		.global	uart0_gets
 2083              	uart0_gets:
 2084              	.LFB6:
  82:../src/uart.c **** 
  83:../src/uart.c **** void uart0_gets(char *s) {
 2085              		.loc 1 83 0
 2086              		.cfi_startproc
 2087              		@ Function supports interworking.
 2088              		@ args = 0, pretend = 0, frame = 16
 2089              		@ frame_needed = 1, uses_anonymous_args = 0
 2090 033c 0DC0A0E1 		mov	ip, sp
 2091              	.LCFI12:
 2092              		.cfi_def_cfa_register 12
 2093 0340 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2094 0344 04B04CE2 		sub	fp, ip, #4
 2095              		.cfi_offset 14, -8
 2096              		.cfi_offset 13, -12
 2097              		.cfi_offset 11, -16
 2098              	.LCFI13:
 2099              		.cfi_def_cfa 11, 4
 2100 0348 10D04DE2 		sub	sp, sp, #16
 2101 034c 18000BE5 		str	r0, [fp, #-24]
 2102              	.L30:
  84:../src/uart.c ****     char _Ch;
  85:../src/uart.c **** 
  86:../src/uart.c ****     do {
  87:../src/uart.c ****     	_Ch = uart0_getchar();
 2103              		.loc 1 87 0 discriminator 1
 2104 0350 FEFFFFEB 		bl	uart0_getchar
 2105 0354 0030A0E1 		mov	r3, r0
 2106 0358 0D304BE5 		strb	r3, [fp, #-13]
  88:../src/uart.c ****     	*s++ = _Ch;
 2107              		.loc 1 88 0 discriminator 1
 2108 035c 18301BE5 		ldr	r3, [fp, #-24]
 2109 0360 0D205BE5 		ldrb	r2, [fp, #-13]
 2110 0364 0020C3E5 		strb	r2, [r3, #0]
 2111 0368 18301BE5 		ldr	r3, [fp, #-24]
 2112 036c 013083E2 		add	r3, r3, #1
 2113 0370 18300BE5 		str	r3, [fp, #-24]
  89:../src/uart.c ****     } while(_Ch != '\n' && _Ch != '\r');
 2114              		.loc 1 89 0 discriminator 1
 2115 0374 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2116 0378 0A0053E3 		cmp	r3, #10
 2117 037c 0200000A 		beq	.L29
 2118 0380 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2119 0384 0D0053E3 		cmp	r3, #13
 2120 0388 F0FFFF1A 		bne	.L30
 2121              	.L29:
  90:../src/uart.c **** 
  91:../src/uart.c ****     *(s - 1) = '\0';
 2122              		.loc 1 91 0
 2123 038c 18301BE5 		ldr	r3, [fp, #-24]
 2124 0390 013043E2 		sub	r3, r3, #1
 2125 0394 0020A0E3 		mov	r2, #0
 2126 0398 0020C3E5 		strb	r2, [r3, #0]
  92:../src/uart.c **** }
 2127              		.loc 1 92 0
 2128 039c 0CD04BE2 		sub	sp, fp, #12
 2129 03a0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2130 03a4 1EFF2FE1 		bx	lr
 2131              		.cfi_endproc
 2132              	.LFE6:
 2134              		.align	2
 2135              		.global	uart0_getint
 2137              	uart0_getint:
 2138              	.LFB7:
  93:../src/uart.c **** 
  94:../src/uart.c **** int32 uart0_getint(void) {
 2139              		.loc 1 94 0
 2140              		.cfi_startproc
 2141              		@ Function supports interworking.
 2142              		@ args = 0, pretend = 0, frame = 24
 2143              		@ frame_needed = 1, uses_anonymous_args = 0
 2144 03a8 0DC0A0E1 		mov	ip, sp
 2145              	.LCFI14:
 2146              		.cfi_def_cfa_register 12
 2147 03ac 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2148 03b0 04B04CE2 		sub	fp, ip, #4
 2149              		.cfi_offset 14, -8
 2150              		.cfi_offset 13, -12
 2151              		.cfi_offset 11, -16
 2152              	.LCFI15:
 2153              		.cfi_def_cfa 11, 4
 2154 03b4 18D04DE2 		sub	sp, sp, #24
  95:../src/uart.c **** 	char _Buff[11 + 1];
  96:../src/uart.c **** 	uart0_gets(_Buff);
 2155              		.loc 1 96 0
 2156 03b8 24304BE2 		sub	r3, fp, #36
 2157 03bc 0300A0E1 		mov	r0, r3
 2158 03c0 FEFFFFEB 		bl	uart0_gets
  97:../src/uart.c **** 
  98:../src/uart.c **** 	int32 result = 0;
 2159              		.loc 1 98 0
 2160 03c4 0030A0E3 		mov	r3, #0
 2161 03c8 10300BE5 		str	r3, [fp, #-16]
  99:../src/uart.c **** 	boolean _Neg = 0;
 2162              		.loc 1 99 0
 2163 03cc 0030A0E3 		mov	r3, #0
 2164 03d0 11304BE5 		strb	r3, [fp, #-17]
 100:../src/uart.c **** 	uint32 _Idx	 = 0;
 2165              		.loc 1 100 0
 2166 03d4 0030A0E3 		mov	r3, #0
 2167 03d8 18300BE5 		str	r3, [fp, #-24]
 101:../src/uart.c **** 
 102:../src/uart.c **** 	if(_Buff[0] == '-') {
 2168              		.loc 1 102 0
 2169 03dc 24305BE5 		ldrb	r3, [fp, #-36]	@ zero_extendqisi2
 2170 03e0 2D0053E3 		cmp	r3, #45
 2171 03e4 1800001A 		bne	.L37
 103:../src/uart.c **** 		_Neg = 1;
 2172              		.loc 1 103 0
 2173 03e8 0130A0E3 		mov	r3, #1
 2174 03ec 11304BE5 		strb	r3, [fp, #-17]
 104:../src/uart.c **** 		++_Idx;
 2175              		.loc 1 104 0
 2176 03f0 18301BE5 		ldr	r3, [fp, #-24]
 2177 03f4 013083E2 		add	r3, r3, #1
 2178 03f8 18300BE5 		str	r3, [fp, #-24]
 105:../src/uart.c **** 	}
 106:../src/uart.c **** 
 107:../src/uart.c **** 	while(_Buff[_Idx] >= '0' && _Buff[_Idx] <= '9') {
 2179              		.loc 1 107 0
 2180 03fc 130000EA 		b	.L33
 2181              	.L35:
 108:../src/uart.c **** 		result = result * 10 + (_Buff[_Idx] - '0');
 2182              		.loc 1 108 0
 2183 0400 10201BE5 		ldr	r2, [fp, #-16]
 2184 0404 0230A0E1 		mov	r3, r2
 2185 0408 0331A0E1 		mov	r3, r3, asl #2
 2186 040c 023083E0 		add	r3, r3, r2
 2187 0410 8330A0E1 		mov	r3, r3, asl #1
 2188 0414 0320A0E1 		mov	r2, r3
 2189 0418 1730E0E3 		mvn	r3, #23
 2190 041c 18101BE5 		ldr	r1, [fp, #-24]
 2191 0420 0C004BE2 		sub	r0, fp, #12
 2192 0424 011080E0 		add	r1, r0, r1
 2193 0428 033081E0 		add	r3, r1, r3
 2194 042c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2195 0430 303043E2 		sub	r3, r3, #48
 2196 0434 033082E0 		add	r3, r2, r3
 2197 0438 10300BE5 		str	r3, [fp, #-16]
 109:../src/uart.c **** 		++_Idx;
 2198              		.loc 1 109 0
 2199 043c 18301BE5 		ldr	r3, [fp, #-24]
 2200 0440 013083E2 		add	r3, r3, #1
 2201 0444 18300BE5 		str	r3, [fp, #-24]
 2202 0448 000000EA 		b	.L33
 2203              	.L37:
 107:../src/uart.c **** 	while(_Buff[_Idx] >= '0' && _Buff[_Idx] <= '9') {
 2204              		.loc 1 107 0
 2205 044c 0000A0E1 		mov	r0, r0	@ nop
 2206              	.L33:
 107:../src/uart.c **** 	while(_Buff[_Idx] >= '0' && _Buff[_Idx] <= '9') {
 2207              		.loc 1 107 0 is_stmt 0 discriminator 1
 2208 0450 1730E0E3 		mvn	r3, #23
 2209 0454 18201BE5 		ldr	r2, [fp, #-24]
 2210 0458 0C104BE2 		sub	r1, fp, #12
 2211 045c 022081E0 		add	r2, r1, r2
 2212 0460 033082E0 		add	r3, r2, r3
 2213 0464 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2214 0468 2F0053E3 		cmp	r3, #47
 2215 046c 0700009A 		bls	.L34
 107:../src/uart.c **** 	while(_Buff[_Idx] >= '0' && _Buff[_Idx] <= '9') {
 2216              		.loc 1 107 0 discriminator 2
 2217 0470 1730E0E3 		mvn	r3, #23
 2218 0474 18201BE5 		ldr	r2, [fp, #-24]
 2219 0478 0C004BE2 		sub	r0, fp, #12
 2220 047c 022080E0 		add	r2, r0, r2
 2221 0480 033082E0 		add	r3, r2, r3
 2222 0484 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2223 0488 390053E3 		cmp	r3, #57
 2224 048c DBFFFF9A 		bls	.L35
 2225              	.L34:
 110:../src/uart.c **** 	}
 111:../src/uart.c **** 
 112:../src/uart.c **** 	if(_Neg) {
 2226              		.loc 1 112 0 is_stmt 1
 2227 0490 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2228 0494 000053E3 		cmp	r3, #0
 2229 0498 0200000A 		beq	.L36
 113:../src/uart.c **** 		result = -result;
 2230              		.loc 1 113 0
 2231 049c 10301BE5 		ldr	r3, [fp, #-16]
 2232 04a0 003063E2 		rsb	r3, r3, #0
 2233 04a4 10300BE5 		str	r3, [fp, #-16]
 2234              	.L36:
 114:../src/uart.c **** 	}
 115:../src/uart.c **** 
 116:../src/uart.c **** 	return result;
 2235              		.loc 1 116 0
 2236 04a8 10301BE5 		ldr	r3, [fp, #-16]
 117:../src/uart.c **** }
 2237              		.loc 1 117 0
 2238 04ac 0300A0E1 		mov	r0, r3
 2239 04b0 0CD04BE2 		sub	sp, fp, #12
 2240 04b4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2241 04b8 1EFF2FE1 		bx	lr
 2242              		.cfi_endproc
 2243              	.LFE7:
 2245              		.align	2
 2246              		.global	uart0_gethex
 2248              	uart0_gethex:
 2249              	.LFB8:
 118:../src/uart.c **** 
 119:../src/uart.c **** uint32 uart0_gethex(void) {
 2250              		.loc 1 119 0
 2251              		.cfi_startproc
 2252              		@ Function supports interworking.
 2253              		@ args = 0, pretend = 0, frame = 24
 2254              		@ frame_needed = 1, uses_anonymous_args = 0
 2255 04bc 0DC0A0E1 		mov	ip, sp
 2256              	.LCFI16:
 2257              		.cfi_def_cfa_register 12
 2258 04c0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2259 04c4 04B04CE2 		sub	fp, ip, #4
 2260              		.cfi_offset 14, -8
 2261              		.cfi_offset 13, -12
 2262              		.cfi_offset 11, -16
 2263              	.LCFI17:
 2264              		.cfi_def_cfa 11, 4
 2265 04c8 18D04DE2 		sub	sp, sp, #24
 120:../src/uart.c ****     char _Buff[8 + 1];
 121:../src/uart.c ****     uart0_gets(_Buff);
 2266              		.loc 1 121 0
 2267 04cc 20304BE2 		sub	r3, fp, #32
 2268 04d0 0300A0E1 		mov	r0, r3
 2269 04d4 FEFFFFEB 		bl	uart0_gets
 122:../src/uart.c **** 
 123:../src/uart.c ****     uint32 result = 0;
 2270              		.loc 1 123 0
 2271 04d8 0030A0E3 		mov	r3, #0
 2272 04dc 10300BE5 		str	r3, [fp, #-16]
 124:../src/uart.c ****     char* _Idx 	  = _Buff;
 2273              		.loc 1 124 0
 2274 04e0 20304BE2 		sub	r3, fp, #32
 2275 04e4 14300BE5 		str	r3, [fp, #-20]
 125:../src/uart.c **** 
 126:../src/uart.c ****     while(*_Idx != '\0') {
 2276              		.loc 1 126 0
 2277 04e8 2B0000EA 		b	.L39
 2278              	.L44:
 2279              	.LBB2:
 127:../src/uart.c ****     	char _Ch = *_Idx;
 2280              		.loc 1 127 0
 2281 04ec 14301BE5 		ldr	r3, [fp, #-20]
 2282 04f0 0030D3E5 		ldrb	r3, [r3, #0]
 2283 04f4 15304BE5 		strb	r3, [fp, #-21]
 128:../src/uart.c ****     	if	   (_Ch >= '0' && _Ch <= '9')
 2284              		.loc 1 128 0
 2285 04f8 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2286 04fc 2F0053E3 		cmp	r3, #47
 2287 0500 0900009A 		bls	.L40
 2288              		.loc 1 128 0 is_stmt 0 discriminator 1
 2289 0504 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2290 0508 390053E3 		cmp	r3, #57
 2291 050c 0600008A 		bhi	.L40
 129:../src/uart.c ****     		result = result * 16 + (_Ch - '0');
 2292              		.loc 1 129 0 is_stmt 1
 2293 0510 10301BE5 		ldr	r3, [fp, #-16]
 2294 0514 0322A0E1 		mov	r2, r3, asl #4
 2295 0518 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2296 051c 033082E0 		add	r3, r2, r3
 2297 0520 303043E2 		sub	r3, r3, #48
 2298 0524 10300BE5 		str	r3, [fp, #-16]
 2299 0528 180000EA 		b	.L41
 2300              	.L40:
 130:../src/uart.c ****     	else if(_Ch >= 'a' && _Ch <= 'f')
 2301              		.loc 1 130 0
 2302 052c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2303 0530 600053E3 		cmp	r3, #96
 2304 0534 0900009A 		bls	.L42
 2305              		.loc 1 130 0 is_stmt 0 discriminator 1
 2306 0538 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2307 053c 660053E3 		cmp	r3, #102
 2308 0540 0600008A 		bhi	.L42
 131:../src/uart.c ****     		result = result * 16 + (_Ch - 'a' + 10);
 2309              		.loc 1 131 0 is_stmt 1
 2310 0544 10301BE5 		ldr	r3, [fp, #-16]
 2311 0548 0322A0E1 		mov	r2, r3, asl #4
 2312 054c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2313 0550 033082E0 		add	r3, r2, r3
 2314 0554 573043E2 		sub	r3, r3, #87
 2315 0558 10300BE5 		str	r3, [fp, #-16]
 2316 055c 0B0000EA 		b	.L41
 2317              	.L42:
 132:../src/uart.c ****     	else if(_Ch >= 'A' && _Ch <= 'F')
 2318              		.loc 1 132 0
 2319 0560 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2320 0564 400053E3 		cmp	r3, #64
 2321 0568 0F00009A 		bls	.L43
 2322              		.loc 1 132 0 is_stmt 0 discriminator 1
 2323 056c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2324 0570 460053E3 		cmp	r3, #70
 2325 0574 0C00008A 		bhi	.L43
 133:../src/uart.c ****     		result = result * 16 + (_Ch - 'A' + 10);
 2326              		.loc 1 133 0 is_stmt 1
 2327 0578 10301BE5 		ldr	r3, [fp, #-16]
 2328 057c 0322A0E1 		mov	r2, r3, asl #4
 2329 0580 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2330 0584 033082E0 		add	r3, r2, r3
 2331 0588 373043E2 		sub	r3, r3, #55
 2332 058c 10300BE5 		str	r3, [fp, #-16]
 2333              	.L41:
 134:../src/uart.c ****     	else break;
 135:../src/uart.c **** 
 136:../src/uart.c ****     	++_Idx;
 2334              		.loc 1 136 0
 2335 0590 14301BE5 		ldr	r3, [fp, #-20]
 2336 0594 013083E2 		add	r3, r3, #1
 2337 0598 14300BE5 		str	r3, [fp, #-20]
 2338              	.L39:
 2339              	.LBE2:
 126:../src/uart.c ****     while(*_Idx != '\0') {
 2340              		.loc 1 126 0 discriminator 1
 2341 059c 14301BE5 		ldr	r3, [fp, #-20]
 2342 05a0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2343 05a4 000053E3 		cmp	r3, #0
 2344 05a8 CFFFFF1A 		bne	.L44
 2345              	.L43:
 137:../src/uart.c ****     }
 138:../src/uart.c **** 
 139:../src/uart.c ****     return result;
 2346              		.loc 1 139 0
 2347 05ac 10301BE5 		ldr	r3, [fp, #-16]
 140:../src/uart.c **** }
 2348              		.loc 1 140 0
 2349 05b0 0300A0E1 		mov	r0, r3
 2350 05b4 0CD04BE2 		sub	sp, fp, #12
 2351 05b8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2352 05bc 1EFF2FE1 		bx	lr
 2353              		.cfi_endproc
 2354              	.LFE8:
 2356              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1682   .text:00000000 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1685   .text:00000000 uart0_init
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1729   .text:00000054 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1736   .text:00000064 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1739   .text:00000064 uart0_putchar
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1779   .text:000000ac $d
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1784   .text:000000b4 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1787   .text:000000b4 uart0_getchar
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1825   .text:000000f4 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1830   .text:000000fc $a
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1833   .text:000000fc uart0_puts
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1880   .text:0000014c uart0_putint
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:1997   .text:00000280 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:2001   .text:00000284 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:2004   .text:00000284 uart0_puthex
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:2083   .text:0000033c uart0_gets
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:2137   .text:000003a8 uart0_getint
C:\Users\USUARI~2\AppData\Local\Temp\ccSnxfXW.s:2248   .text:000004bc uart0_gethex
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
